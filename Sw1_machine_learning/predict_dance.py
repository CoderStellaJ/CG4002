from joblib import dump, load # to load ML
import numpy # to count labels and store in dict
import operator # to get most predicted label

# REPLACE DICT WITH DICT FROM SENSOR
# SAMPLE HAND DATA ONLY - SHOUTOUT
dic_data = {"78:DB:2F:BF:3B:54": {"1": [238691, 111.69, 66.15, 14.1, -245, -297, 83], "2": [249242, -124.44, 59.38, 11.64, 124, -9, 112], "3": [249242, -136.82, 56.44, 16.78, 317, -265, -90], "4": [249242, -154.36, 49.45, 23.12, -195, -70, 66], "5": [249242, -168.49, 43.8, 28.07, 37, 263, 81], "6": [249242, -174.77, 34.46, 30.9, -179, 198, 246], "7": [249242, -179.66, 29.16, 31.36, 269, -33, 0], "8": [249242, 173.76, 36.66, 32.42, 7, -325, 88], "9": [249242, 169.95, 40.93, 32.79, 318, -240, 275], "10": [249242, 164.61, 47.2, 31.58, -31, 72, 299], "11": [249242, -159.59, 65.99, 9.19, 83, -209, -314], "12": [249242, -158.24, 68.25, 7.5, -108, 267, 100], "13": [249242, -150.47, 70.94, 6.68, -177, 263, -293], "14": [249242, -142.99, 71.29, 4.83, 111, -123, 254], "15": [249242, -147.69, 71.03, 4.01, -120, 302, -38], "16": [249242, 175.94, 71.9, 4.59, 269, -286, -235], "17": [249242, 129.48, 70.06, 0.76, -134, 111, 126], "18": [249242, 111.84, 64.21, -0.74, -6, -325, 113], "19": [249242, 102.97, 65.23, -0.72, 202, -171, -167], "20": [249242, -144.75, 45.19, 35.3, 139, -3, -121], "21": [249242, -164.49, 56.93, 22.19, 81, -125, 38], "22": [249242, 177.09, 66.84, 10.75, 224, 60, -325], "23": [249242, 162.95, 68.1, 8.32, 298, -23, 175], "24": [249242, 137.23, 62.88, 12.69, -100, 325, 57], "25": [249242, 143.43, 58.28, 17.77, 299, 118, -83], "26": [249242, 173.97, 45.93, 19.63, -282, 169, -111], "27": [249242, -158.5, 41.19, 15.83, -248, 286, 259], "28": [249242, -125.11, 54.08, 11.79, -310, 42, -317], "29": [249242, -161.58, 51.27, 22.64, 98, 315, -128], "30": [249242, -159.51, 51.43, 22.59, 262, 177, -166], "31": [249242, -158.51, 51.47, 22.65, -217, -8, 289], "32": [249242, -158.76, 51.32, 22.85, 319, 98, -203], "33": [249242, -159.39, 51.02, 23.1, 101, 66, -271], "34": [249242, -160.39, 50.56, 23.7, 62, -321, 83], "35": [249242, -161.22, 49.98, 24.17, -232, -320, -95], "36": [249242, -161.21, 49.66, 24.27, 238, 42, 271], "37": [249242, -161.14, 49.76, 24.02, 266, -162, -187], "38": [249242, 108.81, 24.93, 36.7, 133, 227, -168], "39": [249242, 117.47, 22.75, 48.08, -255, 273, 185], "40": [249242, 129.03, 21.19, 57.65, -312, -71, 249], "41": [249242, 146.94, 17.96, 67.82, -60, 19, -252], "42": [249242, 166.48, 12.0, 77.9, -99, -4, -206], "43": [249242, -177.12, 3.84, 81.23, 207, 158, -308], "44": [249242, -162.98, -6.03, 73.23, 298, 99, -191], "45": [249242, -150.49, -17.13, 62.01, 172, -104, 74], "46": [249242, -140.32, -25.37, 51.98, -133, -178, -247], "47": [249242, 139.39, 58.48, 15.95, 68, -198, -13], "48": [249242, 139.21, 56.54, 15.6, 62, 301, 0], "49": [249242, 138.56, 56.56, 15.34, 283, -284, 123], "50": [249242, 137.39, 58.82, 13.82, 233, 144, -117], "51": [249242, 138.56, 60.77, 12.22, -176, -270, -146], "52": [249242, 141.49, 60.58, 10.98, 23, -302, 60], "53": [249242, 143.77, 59.62, 10.55, 111, -184, -208], "54": [249242, 145.33, 58.86, 11.47, 180, -60, -55], "55": [249242, 146.42, 57.97, 12.12, -227, -255, 22], "56": [249242, 106.33, 71.62, -5.58, -163, -193, 136], "57": [249242, 103.71, 66.22, -0.18, 312, -249, -202], "58": [249242, 102.82, 68.31, 6.94, 2, -169, 168], "59": [249242, 104.99, 72.62, 12.28, 207, 314, 130], "60": [249242, 106.3, 73.93, 16.02, 7, -238, 264], "61": [249242, 103.97, 66.48, 17.62, 32, 184, 311], "62": [249242, 99.75, 49.92, 19.85, -5, -325, 157], "63": [249242, 98.67, 39.56, 23.93, 29, 73, 11], "64": [249242, 101.85, 37.38, 25.39, -59, -293, -113], "65": [249242, -157.86, 49.86, 18.94, 216, 54, -267], "66": [249242, -139.54, 47.36, 15.65, 205, 56, -131], "67": [249242, -106.02, 62.72, 11.61, -92, -157, 5], "68": [249242, -95.88, 58.57, 17.38, 24, 255, -312], "69": [249242, -106.55, 49.21, 20.2, -90, 23, -208], "70": [249242, -117.77, 39.35, 23.15, -129, -106, 70], "71": [249242, -120.72, 29.32, 26.27, -268, 76, -240], "72": [249242, -123.84, 16.65, 28.09, -241, -301, 171], "73": [249242, -129.71, 6.61, 27.95, 47, 127, -29], "74": [249242, -118.52, 54.55, 22.53, -234, 141, -164], "75": [249242, -118.33, 55.71, 21.88, 43, 55, -145], "76": [249242, -118.39, 57.59, 20.86, 52, -137, 38], "77": [249242, -119.24, 60.11, 18.94, -20, 199, -272], "78": [249242, -119.94, 63.38, 15.68, 47, -137, -96], "79": [249242, -118.41, 66.91, 12.59, -13, -60, 277], "80": [249242, -115.17, 69.67, 10.19, -102, 3, 316], "81": [249242, -114.54, 71.17, 7.22, 207, 59, -57], "82": [249242, -115.14, 71.41, 3.5, 212, -91, 266], "83": [249242, -131.96, -21.36, 51.54, -42, 219, 55], "84": [249242, -124.83, -11.09, 48.2, -173, 213, -53], "85": [249242, -117.81, 1.64, 49.33, -304, 6, -28], "86": [249242, -105.85, 18.07, 53.56, -92, -38, -70], "87": [249242, -88.89, 34.8, 49.93, -17, -86, -58], "88": [249242, -94.31, 50.47, 36.95, 27, -157, -154], "89": [249242, -129.83, 60.52, 26.96, 201, 181, -81], "90": [249242, 179.57, 64.14, 22.44, 249, 296, 39], "91": [249242, 142.51, 67.43, 19.37, 165, -156, 192], "92": [249242, 140.6, 63.26, 13.03, -170, 132, -59], "93": [249242, 140.63, 62.97, 12.49, -14, -229, 75], "94": [249242, 141.13, 62.83, 12.13, -119, 54, -173], "95": [249242, 141.45, 62.81, 12.05, -314, 271, -325], "96": [249242, 141.33, 62.92, 11.91, 244, 308, -299], "97": [249242, 141.02, 63.11, 11.86, -154, 249, 309], "98": [249242, 141.19, 63.01, 11.94, -54, 319, 291], "99": [249242, 141.53, 62.85, 12.22, 240, -189, -246], "100": [249242, 141.87, 62.86, 12.53, -214, 9, -230], "101": [249242, 106.56, 67.67, 19.29, -202, 95, -244], "102": [249242, 99.64, 57.25, 16.7, 180, 140, -19], "103": [249242, 91.66, 42.02, 17.81, -3, -125, -128], "104": [249242, 88.87, 35.82, 21.14, 196, -238, -33], "105": [249242, 92.05, 33.03, 24.53, -33, 218, -152], "106": [249242, 97.19, 25.05, 33.37, -47, -210, -172], "107": [249242, 104.5, 13.19, 48.04, -235, -25, -51], "108": [249242, 122.15, 2.9, 67.38, -138, -167, -8], "109": [249242, 172.01, -7.08, 81.74, -110, 219, 2], "110": [249242, -116.81, 46.11, 22.94, -145, 297, 311], "111": [249242, -109.68, 36.63, 27.65, -70, 162, 76], "112": [249242, -104.27, 27.02, 30.93, 308, 45, -184], "113": [249242, -102.33, 22.58, 32.29, 282, 259, 225], "114": [249242, -99.48, 25.8, 36.52, 86, -18, 284], "115": [249242, -95.45, 32.76, 41.73, 24, 274, 82], "116": [249242, -93.18, 37.52, 44.57, 181, -86, 16], "117": [249242, -90.91, 43.28, 41.62, -280, -221, -92], "118": [249242, -92.37, 49.85, 34.23, -9, 297, -40], "119": [249242, -95.85, 61.61, 24.04, -313, 202, -70], "120": [249242, -96.2, 61.74, 23.93, 232, 106, -135], "121": [249242, -96.67, 61.84, 23.87, -79, -6, 302], "122": [249242, -97.22, 61.85, 23.88, -181, -209, 214], "123": [249242, -97.65, 61.96, 23.76, 153, 213, -260], "124": [249242, -97.57, 62.32, 23.37, -71, 251, -60], "125": [249242, -96.98, 62.81, 22.89, 92, -135, 38], "126": [249242, -96.25, 63.15, 22.57, -58, 237, 94], "127": [249242, -95.63, 63.31, 22.51, 181, -84, 156], "128": [249242, -99.89, 49.84, 31.1, 121, -13, -77]}}

leg = "78:DB:2F:BF:2C:E2"
hand = "78:DB:2F:BF:3B:54"


# returns a list of lists, each list containing a row of sensor data

def parse_hand_data(dic_data):
    # collect hand data
    data = []

    for k, v in dic_data[hand].items():  # k = data point no, v = data collected
        ypr = []  # yaw, pitch, roll
        for i in range(1, 7):
            ypr.append(v[i])
        data.append(ypr)

    return (data)

# Get list of lists of yaw, pitch, roll data from data dict
ypr_data = parse_hand_data(dic_data)
# print(ypr_data)
# len(ypr_data)

# Load MLP NN model
mlp = load('mlp_dance.joblib')

# Get Predictions
y_pred = mlp.predict(ypr_data)
# print(y_pred)
# print(len(y_pred))

# Get counts of predictions stored in dictionary
unique, counts = numpy.unique(y_pred, return_counts=True)
y_pred_count = dict(zip(unique, counts))
# print(y_pred_count)

# Get the dance label that was predicted the most
prediction = max(y_pred_count.items(), key=operator.itemgetter(1))[0]
# print(prediction)




